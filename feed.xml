<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-02T15:02:46+09:00</updated><id>http://localhost:4000/</id><title type="html">rainsound 개발 노트</title><subtitle>개발 공부하면서 까먹지 않기 위해 기록하는 블로그입니다.</subtitle><author><name>rainsound</name></author><entry><title type="html">EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기 (2/2)</title><link href="http://localhost:4000/deploy/2018/05/02/instance-setting-and-django-deploy-part2.html" rel="alternate" type="text/html" title="EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기 (2/2)" /><published>2018-05-02T07:50:33+09:00</published><updated>2018-05-02T07:50:33+09:00</updated><id>http://localhost:4000/deploy/2018/05/02/instance-setting-and-django-deploy-part2</id><content type="html" xml:base="http://localhost:4000/deploy/2018/05/02/instance-setting-and-django-deploy-part2.html">&lt;h2 id=&quot;ec2-인스턴스-세팅과-nginx--uwsgi로-django-앱-배포하기22&quot;&gt;EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기(2/2)&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;이전 포스트&lt;/code&gt; : &lt;a href=&quot;/deploy/2018/04/25/instance-setting-and-django-deploy-part1.html&quot;&gt;EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기(1/2)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1편에 이어서 이어서 인스턴스에 배포하기 위해 Django를 세팅하고, Nginx와 uWSGI를 이용해 배포하는 방법에 대해서 알아보겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;1-서버-배포-방법&quot;&gt;1. 서버 배포 방법&lt;/h3&gt;
&lt;p&gt;우선 인스턴스에 배포하기 전에 서버를 구성하는 방법의 종류를 살펴보겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;11-django로만-배포&quot;&gt;1.1 Django로만 배포&lt;/h4&gt;
&lt;p&gt;이 방법은 익숙한 Django의 runserver를 이용하는 방법입니다. Django 프로젝트를 인스턴스에 그대로 옮겨 &lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py runserver&lt;/code&gt; 를 켜서 서버를 돌리는 방법입니다.&lt;/p&gt;

&lt;p&gt;하지만 Django의 runserver는 개발할 때 쓰는 작은 디버깅용 웹 서버이기 때문에 실제 프로젝트를 이 방법으로 배포하지는 않고, 아래의 &lt;code class=&quot;highlighter-rouge&quot;&gt;1.2&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1.3&lt;/code&gt;의 방법을 이용합니다.
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;12-uwsgi--django로-배포&quot;&gt;1.2 uWSGI + Django로 배포&lt;/h4&gt;
&lt;p&gt;Django 프로젝트를 생성하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;wsgi.py&lt;/code&gt; 파일이 생성되는 것을 많이 보셨을 겁니다. 우선 WSGI의 개념부터 살펴보면, &lt;code class=&quot;highlighter-rouge&quot;&gt;Web Server Gateway Interface&lt;/code&gt;의 약자로 웹 서버(Apache, Nginx 등)와 웹 애플리케이션(Django, Flask 등) 사이를 이어주는 역할을 합니다. 즉 웹 서버로 들어온 요청을 Python 언어로 만들어진 웹 애플리케이션과 소통할 수 있도록 해주는 역할을 합니다. 웹 서버에 대한 설명은 &lt;code class=&quot;highlighter-rouge&quot;&gt;1.3&lt;/code&gt;에서 하겠습니다.&lt;/p&gt;

&lt;p&gt;uWSGI는 이 WSGI 규격으로 만들어진 서버 중에 하나이며 Django 프로젝트를 배포할 때 가장 일반적으로 사용됩니다.&lt;/p&gt;

&lt;p&gt;Django는 수많은 request를 처리할 수 있도록 설계되어 있지 않기 때문에, Django로만 배포하지 않고 수많은 request를 처리하도록 설계된 uWSGI를 함께 사용해서 배포합니다. 그렇기 때문에 물론 uWSGI + Django 만으로도 충분히 배포가 가능하지만 추천하지는 않습니다. 이유는 &lt;code class=&quot;highlighter-rouge&quot;&gt;1.3&lt;/code&gt;에서 확인하실 수 있습니다.
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;13-nginx--uwsgi--django로-배포&quot;&gt;1.3 Nginx + uWSGI + Django로 배포&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/img/posts/2018-5-1/1.png&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;image-caption&quot;&gt;&lt;em&gt;사진출처 : https://www.vndeveloper.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;위의 그림에서처럼 Nginx는 클라이언트로부터 HTTP 요청을 받아 request에 따라 바뀌지 않는 즉 정적파일(HTML, CSS, JavaScript)을 돌려주고, 동적데이터가 필요한 요청은 웹 애플리케이션으로 보내줍니다. 이게 바로 웹 서버가 하는 일입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;1.2&lt;/code&gt;의 방법을 추천하지 않은 이유 역시 이 웹 서버가 정적파일을 미리 클라이언트에게 보여줌으로써 서버 성능을 높여주기 때문입니다.&lt;/p&gt;

&lt;p&gt;Nginx에서 받은 요청은 unix socket을 거쳐 uWSGI로 보내지며, uWSGI가 받은 요청을 Python 개발 환경에서 이해(?)할 수 있도록 중계해주면 최종적으로 Django에서 요청을 처리하게 됩니다.&lt;/p&gt;

&lt;p&gt;그럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;Nginx + uWSGI + Django&lt;/code&gt;의 일련의 과정을 실제로 배포하는 방법을 아래에서 알아보도록 하겠습니다.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-django-세팅&quot;&gt;2. Django 세팅&lt;/h3&gt;
&lt;p&gt;인스턴스에 배포하기 전에 Django를 세팅합니다.&lt;/p&gt;

&lt;h4 id=&quot;21-django-static-media-파일-처리-설정&quot;&gt;2.1 Django static, media 파일 처리 설정&lt;/h4&gt;
&lt;p&gt;먼저 제가 사용 중인 프로젝트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;tree 구조&lt;/code&gt;는 아래와 같습니다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx_test
└── app
    ├── config
    │   ├── __init__.py
    │   ├── __pycache__
    │   ├── settings.py
    │   ├── urls.py
    │   └── wsgi.py
    ├── manage.py
    └── post
        ├── __init__.py
        ├── admin.py
        ├── apps.py
        ├── migrations
        │   └── __init__.py
        ├── models.py
        ├── tests.py
        └── views.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;config에 있는 settings.py 파일에 아래처럼 static과 media 폴더를 추가해줍니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx_test/app/config/settings.py&lt;/code&gt;
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ROOT_DIR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BASE_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;STATIC_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/static/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;STATIC_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ROOT_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.static'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;MEDIA_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/media/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ROOT_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.media'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;STATIC_DIR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BASE_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'static'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;STATICFILES_DIRS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;STATIC_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;그 후 gitignore 파일을 열어 최상단에도 추가해줍니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Custom&lt;/span&gt;
/.media
/.static
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;22-django-debug-설정-및-allowed_host-설정-변경&quot;&gt;2.2 Django DEBUG 설정 및 ALLOWED_HOST 설정 변경&lt;/h4&gt;
&lt;p&gt;개발을 완료하고 배포하는 단계이므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;DEBUG&lt;/code&gt; 모드를 &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;로 바꾸고, &lt;code class=&quot;highlighter-rouge&quot;&gt;ALLOWED_HOST&lt;/code&gt;에 aws 주소를 허용합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx_test/app/config/settings.py&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'.amazonaws.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;23-uwsgi-사이트-파일-작성&quot;&gt;2.3 uWSGI 사이트 파일 작성&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt;폴더와 같은 위치에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.config&lt;/code&gt;폴더를 만든후, &lt;code class=&quot;highlighter-rouge&quot;&gt;uwsgi.ini&lt;/code&gt; 파일에 아래와 같이 작성합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이제부터 custom 해야하는 부분은 &amp;lt;&amp;gt; 안에 작성하겠습니다. &amp;lt;&amp;gt; 부분은 꺽쇠 제거 후 자신의 프로젝트에 맞게 custom 해주세요!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx_test/.config/uwsgi.ini&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;; Django 프로젝트에 대한 uwsgi 설정파일
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;[uwsgi]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;chdir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/srv/&amp;lt;nginx_test/app&amp;gt;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;config.wsgi&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/ubuntu/.pyenv/versions/&amp;lt;ec2-deploy&amp;gt;&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;gid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/app.sock&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;chmod-socket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;666&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;chown-socket&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu:ubuntu&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;vacuum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;logto&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tmp/uwsgi.log&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;log-reopen&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ec2-deploy&amp;gt;&lt;/code&gt; 는 pyenv virtualenv로 설정한 가상환경 이름입니다.&lt;/p&gt;

&lt;p&gt;참고로 &lt;code class=&quot;highlighter-rouge&quot;&gt;pycharm&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ini&lt;/code&gt; 확장자 지원은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences -&amp;gt; Plugins -&amp;gt; Browse repositories...&lt;/code&gt; 들어간 후 아래의 플러그인을 설치해주시면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-5-1/2.png&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;24-uwsgi-서비스-설정-파일-작성&quot;&gt;2.4 uWSGI 서비스 설정 파일 작성&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.config&lt;/code&gt;폴더에 &lt;code class=&quot;highlighter-rouge&quot;&gt;uwsgi.service&lt;/code&gt; 파일에 아래와 같이 작성합니다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx_test/.config/uwsgi.service&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[Unit]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;EC2 Deploy uWSGI service&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;syslog.target&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[Service]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/home/ubuntu/.pyenv/versions/ipsw/bin/uwsgi -i &amp;lt;/srv/nginx_test/app/.config/uwsgi.ini&amp;gt;&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;KillSignal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;SIGQUIT&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;notify&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;StandardError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;syslog&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;NotifyAccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;all&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[Install]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi-user.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;25-nginx-설정-파일-작성&quot;&gt;2.5 Nginx 설정 파일 작성&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.config&lt;/code&gt; 폴더에 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx-app.conf&lt;/code&gt;라는 Nginx 설정 파일을 만들고 아래 내용을 작성합니다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx_test/.config/nigx-app.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;*.amazonaws.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;charset&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;utf-8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;client_max_body_size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;uwsgi_pass&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;unix:///tmp/app.sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt;         &lt;span class=&quot;s&quot;&gt;uwsgi_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/static/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/srv/app/.static/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/media/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/srv/app/.media/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;26-requirementstxt-파일-업데이트&quot;&gt;2.6 requirements.txt 파일 업데이트&lt;/h4&gt;
&lt;p&gt;uWSGI를 설치 후, Django 프로젝트에 사용된 패키지들을 서버에 올리기 전에 최종적으로 업데이트 해줍니다.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; pip install uwsgi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; pip freeze &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-인스턴스에-로컬-프로젝트-복사&quot;&gt;3. 인스턴스에 로컬 프로젝트 복사&lt;/h3&gt;
&lt;p&gt;이제 로컬의 Django 프로젝트를 EC2 인스턴스에 복사할 차례입니다. 복사할 땐 &lt;code class=&quot;highlighter-rouge&quot;&gt;scp&lt;/code&gt; 명령어를 사용하며, 아래와 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; scp &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;pem경로&amp;gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &amp;lt;복사할 로컬 프로젝트 위치&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;public dns name&amp;gt;:&amp;lt;복사될 인스턴스 위치&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;제 경우는 아래와 같습니다.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; scp &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; ~/.ssh/examplekey.pem &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; ~/Desktop/Backend/Study/django/nginx_test ubuntu@ec2-52-78-234-247.ap-northeast-2.compute.amazonaws.com:/srv/nginx_test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-인스턴스-세팅&quot;&gt;4. 인스턴스 세팅&lt;/h3&gt;
&lt;p&gt;인스턴스에 복사한 파일들로 인스턴스에도 세팅을 해줍니다.&lt;/p&gt;

&lt;h4 id=&quot;41-pip-list-설치&quot;&gt;4.1 pip list 설치&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;먼저 인스턴스에 접속합니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;pem경로&amp;gt; &amp;lt;user name&amp;gt;@&amp;lt;public dns name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;인스턴스에서 복사한 프로젝트 폴더로 들어가 로컬 프로젝트와 동일한 가상환경명으로 만들어줍니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /srv/nginx_test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; pyenv install 3.6.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; pyenv virtualenv 3.6.4 ec2-deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;pip list&lt;/code&gt; 설치
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; pip install requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;42-인스턴스에-nginx-및-uwsgi-설정&quot;&gt;4.2 인스턴스에 Nginx 및 uWSGI 설정&lt;/h4&gt;
&lt;p&gt;아래 내용은 모두 로컬이 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;에서 진행해야 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nginx 설치
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository ppa:nginx/stable
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx-app.conf&lt;/code&gt; 파일 &lt;code class=&quot;highlighter-rouge&quot;&gt;sites-available&lt;/code&gt; 폴더에 복사
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &amp;lt;/srv/nginx_test/app/.config/nginx-app.conf&amp;gt; /etc/nginx/sites-available/nginx-app.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site-enabled&lt;/code&gt;에 링크 걸어주기
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ln &lt;span class=&quot;nt&quot;&gt;-sf&lt;/span&gt; /etc/nginx/sites-available/nginx-app.conf /etc/nginx/sites-enabled/nginx-app.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;uwsgi.sevice&lt;/code&gt; 파일 &lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt; 폴더에 복사
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /srv/nginx_test/app/.config/uwsgi.service /etc/systemd/system/uwsgi.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py&lt;/code&gt;가 복사된 위치로 이동 후, &lt;code class=&quot;highlighter-rouge&quot;&gt;manage.py collectstatic&lt;/code&gt; 실행
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; python manage.py collectstatic &lt;span class=&quot;nt&quot;&gt;--noinput&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;uwsgi 사용
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;uwsgi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;daemon-reload
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;uwsgi 재부팅
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart uwsgi nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-세팅-완료-및-자동화&quot;&gt;5. 세팅 완료 및 자동화&lt;/h3&gt;
&lt;p&gt;위의 내용들을 완료 후, 자신의 &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2-&lt;/code&gt;로 시작하는 도메인으로 접속하면 사이트가 아래처럼 제대로 나오는 것을 확일할 수 있습니다!
&lt;img src=&quot;/img/posts/2018-5-1/3.png&quot; alt=&quot;그림3&quot; /&gt;
참고로 페이지에 내용을 따로 작성하지 않았으면 아래처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;Not found&lt;/code&gt;가 뜨는게 정상입니다. 제대로 확인해보고 싶으시면 &lt;code class=&quot;highlighter-rouge&quot;&gt;/admin&lt;/code&gt;으로 접속해보시면 됩니다.&lt;/p&gt;

&lt;p&gt;정상적으로 AWS EC2 인스턴스에 배포하였지만, 코드를 수정한다면 위의 복잡한 과정을 다시 해야하는 번거로움이 있습니다. 이를 해결하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; 와 &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.sh&lt;/code&gt; 파일을 작성해보겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;51-deploysh-작성&quot;&gt;5.1 deploy.sh 작성&lt;/h4&gt;
&lt;p&gt;위에서 입력했던 shell 스크립트 명령어들을 한 곳에 작성 후 나중에 호출하는 형식으로 진행할 예정입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;로컬&lt;/code&gt;로 돌아와서 아래 경로에 &lt;code class=&quot;highlighter-rouge&quot;&gt;deploy.sh&lt;/code&gt; 파일을 작성해줍니다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx_test/.config/deploy.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rm &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /etc/nginx/sites-enabled/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &amp;lt;/srv/nginx_test/app/.config/nginx-app.conf&amp;gt; /etc/nginx/sites-available/nginx-app.conf
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ln &lt;span class=&quot;nt&quot;&gt;-sf&lt;/span&gt; /etc/nginx/sites-available/nginx-app.conf /etc/nginx/sites-enabled/nginx-app.conf
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &amp;lt;/srv/nginx_test/app/.config/uwsgi.service&amp;gt; /etc/systemd/system/uwsgi.service

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /srv/app
/bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'/home/ubuntu/.pyenv/versions/&amp;lt;ec2-deploy&amp;gt;/bin/python \
&amp;lt;/srv/ngingx_test/app/manage.py&amp;gt; collectstatic --noinput'&lt;/span&gt; ubuntu

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;uwsgi
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart uwsgi nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;작성시 &amp;lt; &amp;gt; 안에 내용 변경해주세요!&lt;/strong&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;52-zshrc-파일에-명령어-추가&quot;&gt;5.2 .zshrc 파일에 명령어 추가&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;로컬&lt;/code&gt;에서 아래 명령어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; 파일을 열어줍니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; vi ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;참고로 &lt;code class=&quot;highlighter-rouge&quot;&gt;zsh&lt;/code&gt;가 아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;를 사용중이시라면 &lt;code class=&quot;highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt; 을 열어줍니다.&lt;/p&gt;
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; vi ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;맨 하단에 아래 내용 작성
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 인스턴스 username&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;EC2_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ubuntu&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# AWS 도메인 주소&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;EC2_DOMAIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;ec2-52-78-234-247.ap-northeast-2.compute.amazonaws.com&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# pem 경로&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;EC2_PEM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;~/.ssh/examplekey.pem&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 복사할 로컬 프로젝트 위치&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;EC2_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;~/Desktop/Backend/Study/django/nginx_test&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 인스턴스 접속 명령어 세팅&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;con-ec2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ssh -i &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EC2_PEM&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EC2_USER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EC2_DOMAIN&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 인스턴스에 복사하는 명령어 세팅&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;copy-ec2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scp -i &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EC2_PEM&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -r &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EC2_DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EC2_USER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EC2_DOMAIN&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&amp;lt;/srv/nginx_test&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 인스턴스에 기존에 존재하던 파일 삭제 명령어 세팅&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;delete-ec2-command&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;con-ec2 sudo rm -rf &amp;lt;/srv/nginx_test&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 인스턴스에 접속해서 작성한 shell 스크립트 명령어 실행&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;deploy-ec2-command&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;con-ec2 bash &amp;lt;/srv/nginx_test/app/.config/deploy.sh&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 인스턴스에 접속해 pip list 설치 명령어 세팅&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;pip-ec2-command&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;con-ec2 /home/ubuntu/.pyenv/versions/&amp;lt;ec2-deploy&amp;gt;/bin/pip install -r &amp;lt;/srv/nginx_test/requirements.txt&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 명령어들을 조합해 배포 명령어 세팅&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;deploy-ec2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delete-ec2-command; copy-ec2; pip-ec2-command; deploy-ec2-command&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;esc&lt;/code&gt;를 누른 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; 로 저장&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; 새로고침
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;53-배포-준비-완료&quot;&gt;5.3 배포 준비 완료&lt;/h4&gt;
&lt;p&gt;이제 모든 준비는 끝났습니다. 복잡한 과정 없이 아래의 짧은 명령어들로 인스턴스에 접속 및 배포 가능합니다!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AWS EC2 인스턴스에 접속
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; con-ec2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;AWS EC2 인스턴스에 배포
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; deploy-ec2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;개인 공부하면서 작성한 글이라 잘못된 내용이 있을 수 있습니다. 잘못된 내용은 편하게 말씀해주시면 수정하겠습니다:)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>rainsound</name></author><summary type="html">EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기(2/2) 이전 포스트 : EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기(1/2)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/posts/2018-5-1/1.png" /></entry><entry><title type="html">EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기 (1/2)</title><link href="http://localhost:4000/deploy/2018/04/25/instance-setting-and-django-deploy-part1.html" rel="alternate" type="text/html" title="EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기 (1/2)" /><published>2018-04-25T02:30:26+09:00</published><updated>2018-04-25T02:30:26+09:00</updated><id>http://localhost:4000/deploy/2018/04/25/instance-setting-and-django-deploy-part1</id><content type="html" xml:base="http://localhost:4000/deploy/2018/04/25/instance-setting-and-django-deploy-part1.html">&lt;h2 id=&quot;ec2-인스턴스-세팅과-nginx--uwsgi로-django-앱-배포하기12&quot;&gt;EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기(1/2)&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;이전 포스트&lt;/code&gt; : &lt;a href=&quot;/deploy/2018/04/24/aws-signup-and-create-ec2.html&quot;&gt;AWS 가입 및 EC2 인스턴스 생성&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위에서 만든 EC2 인스턴스의 가상환경을 세팅하고, Nginx와 uWSGI를 이용해 Django 앱을 배포하는 방법에 대해서 다룰 예정입니다.&lt;/p&gt;

&lt;h3 id=&quot;1-ec2-인스턴스-가상환경-세팅&quot;&gt;1. EC2 인스턴스 가상환경 세팅&lt;/h3&gt;
&lt;p&gt;인스턴스 환경을 현재 사용중인 로컬 컴퓨터의 환경과 같게 만들어주기 위해서 세팅해줍니다.&lt;/p&gt;

&lt;h4 id=&quot;11-pyenv-설치&quot;&gt;1.1 pyenv 설치&lt;/h4&gt;
&lt;p&gt;터미널로 인스턴스에 접속합니다.   &lt;strong&gt;로컬이 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;가상환경&lt;/code&gt;입니다!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;참고로 인스턴스 접속은 아래 명령어로 가능합니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;pem경로&amp;gt; &amp;lt;user name&amp;gt;@&amp;lt;public dns name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;locale 오류(한글 깨짐 현상) fix
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/default/locale
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;맨 아랫줄에 아래 내용 입력 후 esc를 누르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; 로 저장
        &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;LC_CTYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en_US.UTF-8&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en_US.UTF-8&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LANG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en_US.UTF-8&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-24/2.png&quot; alt=&quot;그림2&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인스턴스 재접속
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;pem경로&amp;gt; &amp;lt;user name&amp;gt;@&amp;lt;public dns name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;apt-get 업데이트
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;apt-get 업그레이드
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get dist-upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pyenv/pyenv/wiki/Common-build-problems&quot;&gt;Common build problems&lt;/a&gt;에 나온 내용부터 설치
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; make build-essential libssl-dev zlib1g-dev libbz2-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
xz-utils tk-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;pyenv 설치
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;12-zsh-설치&quot;&gt;1.2 zsh 설치&lt;/h4&gt;
&lt;p&gt;좀 더 사용성을 좋게 하기 위해 기본 &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;zsh&lt;/code&gt;로 변경합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;zsh 설치
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;oh-my-zsh 설치
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; http://install.ohmyz.sh | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;기본 쉘을 &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;zsh&lt;/code&gt;로 변경
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;chsh ubuntu &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;which zsh&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;종료 후 재접속
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;pem경로&amp;gt; &amp;lt;user name&amp;gt;@&amp;lt;public dns name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;zshrc에 pyenv 관련 내용 추가
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; vi ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;2번째 줄 &lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH ~&lt;/code&gt; 부분 주석 해제
&lt;img src=&quot;/img/posts/2018-4-24/3.png&quot; alt=&quot;그림3&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;맨 아래 부분에 아래 내용 추가
        &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/ubuntu/.pyenv/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;pyenv init -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;pyenv virtualenv-init -&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-24/4.png&quot; alt=&quot;그림4&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;esc 키를 누른 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; 를 입력해 저장&lt;/li&gt;
      &lt;li&gt;zshrc 새로고침
        &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;13-srv-폴더-권한-수정&quot;&gt;1.3 /srv 폴더 권한 수정&lt;/h4&gt;
&lt;p&gt;로컬의 파일을 이제 인스턴스에 옮길 차례입니다. 파일은 인스턴스의 &lt;code class=&quot;highlighter-rouge&quot;&gt;/srv&lt;/code&gt; 폴더로 옮겨야하는데, 권한이 필요합니다. 옮길 수 있도록 아래 명령어로 권한을 &lt;code class=&quot;highlighter-rouge&quot;&gt;ubuntu&lt;/code&gt;로 변경합니다. (참고 : &lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_%EA%B3%84%EC%B8%B5%EA%B5%AC%EC%A1%B0_%ED%91%9C%EC%A4%80&quot;&gt;리눅스 폴더 구조&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;chown &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; ubuntu:ubuntu /srv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이어서 인스턴스에 배포하기 위해 Django를 세팅하고, Nginx와 uWSGI를 이용해 배포하는 방법은 다음 포스트에서 확인 가능합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;다음 포스트&lt;/code&gt; : &lt;a href=&quot;/deploy/2018/05/02/instance-setting-and-django-deploy-part2.html&quot;&gt;EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기 (2/2)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;개인 공부하면서 작성한 글이라 잘못된 내용이 있을 수 있습니다. 잘못된 내용은 편하게 말씀해주시면 수정하겠습니다:)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>rainsound</name></author><summary type="html">EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기(1/2) 이전 포스트 : AWS 가입 및 EC2 인스턴스 생성</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/posts/2018-4-24/1.png" /></entry><entry><title type="html">AWS 가입 및 EC2 인스턴스 생성</title><link href="http://localhost:4000/deploy/2018/04/24/aws-signup-and-create-ec2.html" rel="alternate" type="text/html" title="AWS 가입 및 EC2 인스턴스 생성" /><published>2018-04-24T01:55:13+09:00</published><updated>2018-04-24T01:55:13+09:00</updated><id>http://localhost:4000/deploy/2018/04/24/aws-signup-and-create-ec2</id><content type="html" xml:base="http://localhost:4000/deploy/2018/04/24/aws-signup-and-create-ec2.html">&lt;h2 id=&quot;aws-가입-및-ec2-인스턴스-생성&quot;&gt;AWS 가입 및 EC2 인스턴스 생성&lt;/h2&gt;
&lt;p&gt;이 포스팅에서는 AWS에 가입하는 방법부터, EC2 인스턴스를 생성하는 방법에 대해서 다룹니다.&lt;/p&gt;
&lt;h3 id=&quot;1-aws-가입&quot;&gt;1. AWS 가입&lt;/h3&gt;
&lt;p&gt;AWS는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Amazon Web Services&lt;/code&gt;의 약자로 아마존닷컴이 제공하는 각종 원격 컴퓨팅 서비스입니다. AWS에서 컴퓨팅 파워, 데이터베이스 스토리지, 콘텐츠 전송 및 기타 기능을 원격으로 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;AWS와 비슷한 서비스로 구글의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Cloud Platform&lt;/code&gt;, 마이크로소프트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Azure&lt;/code&gt;가 있는데 이번에는 AWS 이용 방법에 대해서 알아보겠습니다.&lt;/p&gt;
&lt;h4 id=&quot;11-httpsawsamazoncomko-사이트-접속&quot;&gt;1.1. &lt;a href=&quot;https://aws.amazon.com/ko&quot;&gt;https://aws.amazon.com/ko&lt;/a&gt; 사이트 접속&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/1.png&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;12-이메일-입력-후-계정-정보-입력&quot;&gt;1.2. 이메일 입력 후 계정 정보 입력&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;계정 유형은 기업이 아닐 경우 개인으로 선택하고, 주소는 모두 영어로 기입합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/2.png&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;13-결제-정보-입력&quot;&gt;1.3. 결제 정보 입력&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;AWS는 기본적으로 새로운 계정에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;프리 티어&lt;/code&gt;라는 1년 무료 플랜을 제공하나, 프리 티어의 한도를 초과하거나 1년이 지날 경우는 과금이 되므로 주의해야합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/3.png&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;14-전화-인증&quot;&gt;1.4. 전화 인증&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;전화 번호를 입력 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;지금 전화하기&lt;/code&gt; 버튼을 누르고 ARS가 걸려오면 화면에 보이는 번호를 입력합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/4.png&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;15-지원-플랜-선택-후-가입-완료&quot;&gt;1.5. 지원 플랜 선택 후 가입 완료&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;상황에 맞게 플랜을 선택하면 되나, 지금은 테스트이므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;기본 플랜&lt;/code&gt;을 선택하겠습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/5.png&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-ec2-인스턴스-생성&quot;&gt;2. EC2 인스턴스 생성&lt;/h3&gt;
&lt;p&gt;먼저 EC2의 개념은 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%95%84%EB%A7%88%EC%A1%B4_%EC%9D%BC%EB%9E%98%EC%8A%A4%ED%8B%B1_%EC%BB%B4%ED%93%A8%ED%8A%B8_%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C&quot;&gt;위키백과&lt;/a&gt;에 잘 나와 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;아마존 일래스틱 컴퓨트 클라우드(Amazon Elastic Compute Cloud)는
아마존닷컴의 클라우드 컴퓨팅 플랫폼 아마존 웹 서비스의 중앙부를 이루며,
사용자가 가상 컴퓨터를 임대 받아 그 위에 자신만의 컴퓨터 애플리케이션들을 실행할 수 있게 한다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;즉 이 EC2를 사용하면 자신의 앱을 돌리기 위해 서버용 컴퓨터를 개인마다 갖고 있을 필요 없이, 아마존닷컴의 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;라 불리는 가상 머신을 임대 받아 자신의 앱을 돌릴 수 있습니다.&lt;/p&gt;

&lt;p&gt;그럼 AWS에서 이 EC2에 인스턴스를 생성하는 방법에 대해서 알아보겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;21-지역-변경&quot;&gt;2.1. 지역 변경&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;우선 로그인 후, 우측 상단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;미국 동부(오하이오)&lt;/code&gt;로 되어 있는 지역을 &lt;code class=&quot;highlighter-rouge&quot;&gt;아시아 태평양(서울)&lt;/code&gt;로 변경해줍니다. 이는 서버를 어느 지역으로 설정할 것인지 정하는 것인데, 한국에서 돌린다면 한국 서버가 가장 빠르고 지연속도가 낮습니다. 참고로 한국 서버를 지원한건 이제 2년 조금 넘었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/6.png&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;22-ec2-메뉴-선택-및-인스턴스-생성&quot;&gt;2.2. EC2 메뉴 선택 및 인스턴스 생성&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;검색창에 &lt;code class=&quot;highlighter-rouge&quot;&gt;EC2&lt;/code&gt;를 검색해서 접속합니다. 접속 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스 시작&lt;/code&gt; 버튼을 눌러줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/7.png&quot; alt=&quot;그림7&quot; /&gt;
&lt;img src=&quot;/img/posts/2018-4-23/8.png&quot; alt=&quot;그림8&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;23-amiamazon-machine-image-선택&quot;&gt;2.3. AMI(Amazon Machine Image) 선택&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;AMI는 인스턴스에 어떤 소프트웨어를 구축해 놓을지 정하는 것입니다. 배포하려는 앱이 어떤 서버인지에 따라 선택해주시면 됩니다. 저는 Django 앱을 배포하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu Server 16.04 LTS&lt;/code&gt; 를 선택하겠습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;참고로 무료로 사용하실 분들은 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;프리티어 사용 가능&lt;/code&gt; 중에 선택해주세요!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/9.png&quot; alt=&quot;그림9&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;24-인스턴스-유형-선택&quot;&gt;2.4. 인스턴스 유형 선택&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;인스턴스 유형은 가상 머신의 성능을 선택하는 것입니다. 상황에 맞게 선택해주시면 되며 성능이 높을수록 당연히 가격이 올라갑니다. 무료로 사용하실 분은 두번째 &lt;code class=&quot;highlighter-rouge&quot;&gt;프리티어 사용 가능&lt;/code&gt; 항목을 선택해주시면 됩니다. 유형 선택 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;다음: 인스턴스 세부 정보 구성&lt;/code&gt;을 눌러줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/10.png&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;25-보안-그룹-구성&quot;&gt;2.5. 보안 그룹 구성&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;1 ~ 5번 항목까지 다음을 눌러주시고, 보안 그룹 구성으로 옵니다. 여기서 보안 그룹 이름과 설명을 나중에 알아보기 쉽게 바꿔 주고, &lt;code class=&quot;highlighter-rouge&quot;&gt;검토 및 시작&lt;/code&gt;을 눌러줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/11.png&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;26-키-페어-생성&quot;&gt;2.6. 키 페어 생성&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;키 페어는 나중에 원격으로 이 인스턴스에 접속하기 위해서 반드시 필요합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;새 키 페어 생성&lt;/code&gt;을 누른 후 키 페어 이름을 작성하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;키 페어 다운로드&lt;/code&gt;로 다운로드 해줍니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;키 페어는 한 번 발급 받은 후, 다시 받을 방법이 없으므로 반드시 잘 보관해야합니다!!&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;키 페어 관리 방법과 사용 방법은 아래에서 다룰 예정이니, 그 때까지 잘 보관해주세요!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/12.png&quot; alt=&quot;그림12&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;27-예상-요금-알림-받기&quot;&gt;2.7. 예상 요금 알림 받기&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;인스턴스가 생성되는 동안, 예상 요금을 이메일로 알림 받을 수 있도록 세팅해보겠습니다. 먼저 예상 요금 알림 받기 항목에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;결제 알림 생성&lt;/code&gt; 버튼을 눌러줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/13.png&quot; alt=&quot;그림13&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;결제 알림 받기&lt;/code&gt;를 체크해주시고(참고로 한 번 체크를 하면 해제할 수 없으니, 따로 안받으실 분들은 안해주셔도 됩니다), &lt;code class=&quot;highlighter-rouge&quot;&gt;새로운 예산 기능을 사용해 보십시오!&lt;/code&gt; 를 눌러주세요.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/14.png&quot; alt=&quot;그림14&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;예산 작성&lt;/code&gt; 버튼을 누른 후, 자신의 예산 상황에 맞게 작성하신 후 마지막에 알림 받을 이메일 주소를 입력해주시면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/15.png&quot; alt=&quot;그림15&quot; /&gt;
&lt;img src=&quot;/img/posts/2018-4-23/16.png&quot; alt=&quot;그림16&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;28-인스턴스-생성-완료&quot;&gt;2.8. 인스턴스 생성 완료&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;축하합니다! 인스턴스 생성이 완료되었습니다. 알아보기 쉽게 &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;에 이름을 입력해줍니다.
&lt;img src=&quot;/img/posts/2018-4-23/17.png&quot; alt=&quot;그림17&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;29-키-페어-관리&quot;&gt;2.9. 키 페어 관리&lt;/h4&gt;
&lt;p&gt;이 후 모든 내용은 Linux/Mac OS 기준으로 진행합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;터미널을 실행 후 아래 명령어를 입력해 봅니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .ssh/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;no such file or directory&lt;/code&gt; 가 나오면 아래 명령어로 &lt;code class=&quot;highlighter-rouge&quot;&gt;.ssh&lt;/code&gt; 폴더를 새로 생성해줍니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; mkdir .ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;그 후 위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd .ssh/&lt;/code&gt; 명령어로 접속 후 아래 명령어로 폴더를 열어줍니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; open &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;폴더가 열렸으면 아까 다운로드 받은 프라이빗 키 파일(~~~.pem)을 &lt;code class=&quot;highlighter-rouge&quot;&gt;.ssh&lt;/code&gt; 폴더 안으로 넣어 줍니다.&lt;/li&gt;
  &lt;li&gt;그 후 다시 터미널 &lt;code class=&quot;highlighter-rouge&quot;&gt;.ssh&lt;/code&gt; 폴더에서 아래 명령어로 키 파일을 사용자 자신만 볼 수 있게 권한을 변경해줍니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; chmod 400 ~~~.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/img/posts/2018-4-23/18.png&quot; alt=&quot;그림18&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;210-원격으로-인스턴스에-접속&quot;&gt;2.10. 원격으로 인스턴스에 접속&lt;/h4&gt;
&lt;p&gt;원격으로 인스턴스에 연결하기 위해서는 터미널에 아래의 명령어를 사용합니다.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; pem경로 user-name@public-dns-name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;pem경로&lt;/strong&gt; 는 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.ssh/~~~.pem &lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;user-name&lt;/strong&gt; 의 경우 아직 인스턴스의 user를 따로 설정하지 않았기 때문에 default 값을 따릅니다. default 값은 아래와 같습니다.
    &lt;ul&gt;
      &lt;li&gt;Amazon Linux AMI의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2-user&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Centos AMI의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;centos&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Debian AMI의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Fedora AMI의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2-user&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;RHEL AMI의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2-user&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;SUSE AMI의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;ec2-user&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Ubuntu AMI의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;ubuntu&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;public-dns-name&lt;/strong&gt; 은 aws 사이트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;퍼블릭 DNS(IPv4)&lt;/code&gt; 값을 가져옵니다.
&lt;img src=&quot;/img/posts/2018-4-23/19.png&quot; alt=&quot;그림19&quot; /&gt;
따라서 최종적으로 제 기준 경로는 아래와 같습니다.
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; ~/.ssh/examplekey.pem ubuntu@ec2-52-78-234-247.ap-northeast-2.compute.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;위의 명령어를 터미널에 치면, 아래와 같이 인스턴스로 원격 접속한 것을 확인할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;img src=&quot;/img/posts/2018-4-23/20.png&quot; alt=&quot;그림20&quot; /&gt;&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
이번 포스팅에서는 AWS에 가입해 EC2 인스턴스를 생성하는 방법에 대해서 알아보았습니다.
Nginx + uWSGI로 Django 앱 배포하는 방법은 다음 포스트에서 확인 가능합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;다음 포스트&lt;/code&gt; : &lt;a href=&quot;/deploy/2018/04/25/instance-setting-and-django-deploy-part1.html&quot;&gt;EC2 인스턴스 세팅과 Nginx + uWSGI로 Django 앱 배포하기 (1/2)&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;개인 공부하면서 작성한 글이라 잘못된 내용이 있을 수 있습니다. 잘못된 내용은 편하게 말씀해주시면 수정하겠습니다:)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>rainsound</name></author><summary type="html">AWS 가입 및 EC2 인스턴스 생성 이 포스팅에서는 AWS에 가입하는 방법부터, EC2 인스턴스를 생성하는 방법에 대해서 다룹니다. 1. AWS 가입 AWS는 Amazon Web Services의 약자로 아마존닷컴이 제공하는 각종 원격 컴퓨팅 서비스입니다. AWS에서 컴퓨팅 파워, 데이터베이스 스토리지, 콘텐츠 전송 및 기타 기능을 원격으로 할 수 있습니다.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/posts/2018-4-23/1.png" /></entry></feed>